{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "doStuff",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "myArray",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9bcc09600633885e63eac8e7ad5198b62b9d5614151c3a793d978f86101811c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "272594",
    "logsBloom": "0x
    "blockHash": "0xaaca68a1a3c7170633b5d6d5dbeb70793dc9f9fd17bd914ef26362e3f691c0be",
    "transactionHash": "0xd9bcc09600633885e63eac8e7ad5198b62b9d5614151c3a793d978f86101811c",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "272594",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2ab7cbf6c94d97d3befdc242c0e452ec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"doStuff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"myArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FunWithStorage.sol\":\"FunWithStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FunWithStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract FunWithStorage {\\r\\n    uint256 favoriteNumber; // Stored at slot 0\\r\\n    bool someBool; // Stored at slot 1\\r\\n    uint256[] public myArray;\\r\\n    mapping(uint256 => bool) myMap; /* An empty slot is held at slot 3\\r\\n    and the elements will be stored at keccak256(h(k) . p)\\r\\n\\r\\n    p: The storage slot (aka, 3)\\r\\n    k: The key in hex\\r\\n    h: Some function based on the type. For uint256, it just pads the hex\\r\\n    */\\r\\n    uint256 constant NOT_IN_STORAGE = 123;\\r\\n    uint256 immutable i_not_in_storage;\\r\\n\\r\\n    constructor() {\\r\\n        favoriteNumber = 25; // See stored spot above // SSTORE\\r\\n        someBool = true; // See stored spot above // SSTORE\\r\\n        myArray.push(222); // SSTORE\\r\\n        myMap[0] = true; // SSTORE\\r\\n        i_not_in_storage = 123;\\r\\n    }\\r\\n\\r\\n    function doStuff() public {\\r\\n        uint256 newVar = favoriteNumber + 1; // SLOAD\\r\\n        bool otherVar = someBool; // SLOAD\\r\\n        // ^^ memory variables\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa89d3a3dfbad63e3098095b1e138c31c01e4b80452114d2a68ad29487ff96f06\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50601960008190555060018060006101000a81548160ff021916908315150217905550600260de908060018154018082558091505060019003906000526020600020016000909190919091505560016003600080815260200190815260200160002060006101000a81548160ff021916908315150217905550607b608081815250506080516101ef6100aa600039600050506101ef6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063874f33a11461003b578063cc3e57d914610045575b600080fd5b610043610075565b005b61005f600480360381019061005a91906100ff565b6100a0565b60405161006c919061013b565b60405180910390f35b600060016000546100869190610185565b90506000600160009054906101000a900460ff1690505050565b600281815481106100b057600080fd5b906000526020600020016000915090505481565b600080fd5b6000819050919050565b6100dc816100c9565b81146100e757600080fd5b50565b6000813590506100f9816100d3565b92915050565b600060208284031215610115576101146100c4565b5b6000610123848285016100ea565b91505092915050565b610135816100c9565b82525050565b6000602082019050610150600083018461012c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610190826100c9565b915061019b836100c9565b92508282019050808211156101b3576101b2610156565b5b9291505056fea2646970667358221220b903e7ba71885cbc4b94c84c42e67b7e83787d66e15d196d14b7648358c0e26264736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063874f33a11461003b578063cc3e57d914610045575b600080fd5b610043610075565b005b61005f600480360381019061005a91906100ff565b6100a0565b60405161006c919061013b565b60405180910390f35b600060016000546100869190610185565b90506000600160009054906101000a900460ff1690505050565b600281815481106100b057600080fd5b906000526020600020016000915090505481565b600080fd5b6000819050919050565b6100dc816100c9565b81146100e757600080fd5b50565b6000813590506100f9816100d3565b92915050565b600060208284031215610115576101146100c4565b5b6000610123848285016100ea565b91505092915050565b610135816100c9565b82525050565b6000602082019050610150600083018461012c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610190826100c9565b915061019b836100c9565b92508282019050808211156101b3576101b2610156565b5b9291505056fea2646970667358221220b903e7ba71885cbc4b94c84c42e67b7e83787d66e15d196d14b7648358c0e26264736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/FunWithStorage.sol:FunWithStorage",
        "label": "favoriteNumber",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5,
        "contract": "contracts/FunWithStorage.sol:FunWithStorage",
        "label": "someBool",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 8,
        "contract": "contracts/FunWithStorage.sol:FunWithStorage",
        "label": "myArray",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 12,
        "contract": "contracts/FunWithStorage.sol:FunWithStorage",
        "label": "myMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}